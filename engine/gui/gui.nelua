-- Requires raylib

local Widget = @record {
	relPos: Vector2,
	maxPos: Vector2
}

local UIWindow = @record {
	position: Vector2,
	size: Vector2,
	borderColour: Color,
	borderSize: cint,
	bgColour: Color,
	fgColour: Color,

	menuBarAvailable: boolean,
	menuBarSize: cint,
	menuText: string,
	textPad: cint,
	fSize: cint
}

local UIManagerClass = @record {
	UIWindows: [20]UIWindow,
	windowSpotsFree: [20]cint
}

-- [[ Record functions ]] --

function UIWindow:Draw()
	if self.borderSize > 0 then
		DrawRectangle(self.position.x, self.position.y, self.size.x, self.size.y, self.borderColour)
		DrawRectangle(self.position.x + self.borderSize, self.position.y + self.borderSize, self.size.x - self.borderSize * 2, self.size.y - self.borderSize * 2, self.bgColour)
	else
		DrawRectangle(self.position.x, self.position.y, self.size.x, self.size.y, self.bgColour)
	end

	if self.menuBarAvailable then
		DrawRectangle(self.position.x, self.position.y, self.size.x, self.menuBarSize, self.borderColour) 
		DrawRectangle(self.position.x + self.borderSize, self.position.y + self.borderSize, self.size.x - self.borderSize * 2, self.menuBarSize - self.borderSize * 2, self.bgColour)

		DrawText(self.menuText, self.position.x	+ self.borderSize + self.textPad, self.position.y + self.borderSize + self.textPad, self.fSize, self.fgColour)
	end
end

function UIManagerClass:AddWindow(xy: Vector2, wh: Vector2, borderS: cint, borderC: Color, bg: Color, fg: Color, text: string, fSize: cint, menuBar: boolean, menuSize: cint, menuText: string)
	
end

global UIManager: UIManagerClass
