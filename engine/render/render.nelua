require "engine/gui/gui"

local RendererClass = @record {
	isRenderingIntro: boolean,
	isRenderingFrames: boolean,
	frameCount: cint,
	realFrameCount: cint,
}

function RendererClass:BeginRenderIntro()
	while self.isRenderingIntro do
		if self.frameCount >= 48 then
			self.isRenderingFrames = false
		end

		if self.frameCount >= 54 then
			self.isRenderingIntro = false 
		end

		local texture: Texture2D

		if self.isRenderingFrames then
			texture = LoadTexture("engine/intro-manager/resources/frames/TeaEngineIntro-"..tostring(self.frameCount)..".png")
		end

		-- void DrawTexture(Texture2D texture, int posX, int posY, Color tint);
		BeginDrawing()
		ClearBackground((Color){12, 15, 16, 255})

		if self.isRenderingFrames then
			DrawTexture(texture, 0, 0, WHITE);
		end

		EndDrawing()

		self.realFrameCount = self.realFrameCount + 1

		if self.realFrameCount % 4 == 0 then
			self.frameCount = self.frameCount + 1
		end
	end
end

function RendererClass:SetupEngineUI()
	--[[ Create windows (Hierarchy, Inspector) ]]--
	UIManager:AddWindow("Hierarchy", "HierarchyWindow", (Vector2){screenWidth / 4, screenHeight - screenHeight / 4}, (Vector2){0, 0}, (Color){15, 15, 15, 255}, (Color){40, 40, 40, 255}, (Color){200, 200, 200, 255}, 8, 12, 32, 4 ,true)
	UIManager:AddWindow("Inspector", "InspectorWindow", (Vector2){screenWidth / 4, screenHeight / 4}, (Vector2){screenWidth / 4, 0}, (Color){15, 15, 15, 255}, (Color){40, 40, 40, 255}, (Color){200, 200, 200, 255}, 8, 12, 32, 4, true)

	--[[ Create widgets for the inspector ]]--
	UIManager:AddWidget("InspectorWindow", "PlayButton", "Button", "Play", 12, (Vector2){16, 48}, (Vector2){40,24})
	UIManager:AddWidget("InspectorWindow", "StopButton", "Button", "Stop", 12, (Vector2){72, 48}, (Vector2){40,24})
end

function RendererClass:RenderEngineUI()
	local EngineGUIClass = @record {
		screenWidth: uint16,
		screenHeight: uint16
	}
	
	function EngineGUIClass:Init()
		screenWidth = GetScreenWidth()
		screenHeight = GetScreenHeight()
	end
end

function RendererClass:Render()
	ClearBackground((Color){12, 15, 16, 255})
	UIManager:Update()
end

function RendererClass:Init()
	--[[ Show the intro screen ]]--
	self:BeginRenderIntro()
	
	--[[ Define screen width variables ]]--
	screenWidth = GetScreenWidth()
	screenHeight = GetScreenHeight()

	-- [[ Setup the engine UI ]] --
	self:SetupEngineUI()
end

-- [[ Create a global renderer ]] --
global Renderer: RendererClass

Renderer.isRenderingIntro = true
Renderer.isRenderingFrames = true
